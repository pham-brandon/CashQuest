package personal_finance_app_backend.services;
import java.time.LocalDateTime;
import personal_finance_app_backend.dao.UserDAO;
import personal_finance_app_backend.models.Users;

public class UserService {

    private UserDAO userDAO;

    // Constructor to allow mock injection for testing
    public UserService(UserDAO userDAO) {
        this.userDAO = userDAO;
    }

    public boolean registerUser(String name, String email, String password) {
        // Check if the user already exists by email
        if (userDAO.getUserByEmail(email) != null) {
            System.out.println("User with email " + email + " already exists.");
            return false; // User already exists
        }

        // Hashing password can be added here *maybe in the future
        Users newUser = null;
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
            newUser = new Users(0, name, email, password, LocalDateTime.now().toString());
        }
        // The if statement here ^ is generated by the IDE as a default action because the SDK that I use is old af, feel free to update it in manifest

        // Attempt to register the new user
        boolean isAdded = userDAO.addUser(newUser);
        if (!isAdded) {
            System.out.println("Failed to register user.");
            return false;
        }
        return true; // User successfully registered
    }

    // Login function
    public Users loginUser(String email, String password) {
        Users user = userDAO.login(email, password);
        if (user == null) {
            System.out.println("Login failed: Invalid credentials");
        }
        return user;
    }

    // Get user details by ID
    public Users getUserById(int userId) {
        return userDAO.getUserById(userId);
    }

    // Update user information
    public boolean updateUser(Users user) {
        return userDAO.updateUser(user);
    }

    // Delete a user
    public boolean deleteUser(int userId) {
        return userDAO.deleteUser(userId);
    }
}
